Here are the recommended steps you need to take to install Coinbox on your system:

  * Create the `virtualenv`:

    $ virtualenv coinbox
    $ cd coinbox/
    $ source bin/activate
  
  * Build PySide, because PIP will (most likely) fail while installing it. If you want to use systen site-packages then you don't need this, you can use your favorite package manager, as long as pip knows about this.
  
    $ wget https://pypi.python.org/packages/source/P/PySide/PySide-1.2.1.tar.gz
    $ tar -xvzf PySide-1.2.1.tar.gz
    $ cd PySide-1.2.1
    $ python2.7 setup.py bdist_egg --qmake=/usr/bin/qmake-qt4
    $ # Wait... Get something to drink... Wait some more...
    $ easy_install dist/PySide-1.2.1-py2.7.egg
    $ pyside_postinstall.py -install
    $ cd ..
  
  * Just to check where we're at, you can run `pip freeze | less` and check that PySide is installed.
  
  * Let the fun begin:
  
    $ wget https://github.com/coinbox/coinbox-core/archive/master.zip -O install.zip
    $ unzip install.zip
    $ cd coinbox-core-master/
    $ make install
  
  * To check that it all went good, first make sure your PC did not blow up after that command. Second, use `pip freeze | less` to check that "Coinbox-pos" is there, along with a couple other dependent packages.
  
  * Install the modules:
  
    $ make install-modules
    $ # Wait a bit
  
  * Again to check `pip freeze | less` and you shouldn't be smelling burnt silicon.
  
  * Okay so now, we set some environment variables to know where to store everything.
  
    $ # Either this:
    $ env COINBOX_LOCALE_DIR=$(pwd) COINBOX_DATA_DIR=$(pwd) COINBOX_CONFIG_DIR=$(pwd) coinbox config
    
    
    $ # Or:
    $ export COINBOX_LOCALE_DIR=$(pwd) COINBOX_DATA_DIR=$(pwd) COINBOX_CONFIG_DIR=$(pwd)
    $ env | grep COINBOX
        COINBOX_LOCALE_DIR=/home/jkik/dev/coinbox
        COINBOX_CONFIG_DIR=/home/jkik/dev/coinbox
        COINBOX_DATA_DIR=/home/jkik/dev/coinbox
    $ coinbox config
  
  * You'll probably see "Get me to the wizard." on a blank screen. Just close it, and continue. (it's still work in progress, if you don't see it let me know so I can remove this from this document)
  
  * You might get an import error regarding PIL too, just `pip install PIL`.
  
  * And if you want colors in the logs: `pip install clint`.
  
  * Oh and there's an issue with `argparse` not having the latest version in Python 2.7, so we ship the latest with us. It *might* not get detected, in that case you'd have to replace it by yourself manually; sorry, I'll see if I can do something about it. Maybe try `make develop` instead of `make install` above in a new virtualenv, or try installing `easy_install --zip-ok argparse`, hopefully there'll be the latest version.
  
  * Now configuration:
  
    $ coinbox config
    $ # Configure the database. You can just press OK for now. And say yes to everything
  
  * In case you want to use MySQL: `pip install MySQL-python` and for PostgreSQL: `pip install psycopg2`, etc.
  
  * And in case you want to help us or report a bug (which also helps us):
  
    $ coinbox raw-config
    $ # From there in the "app" tab, you can set logging level to DEBUG and direct the log to a file (easy to attach) and even give it colors (not in the file, and install clint, and on linux/mac/cygwin not windows's cmd)
  
  * And run!
  
    $ coinbox
  
  * If you get something like "too few arguments", it's argparse, check in the logs which version and where it's loaded, and make sure it's the one we shipped.

Okay, that's it.

I didn't mention the things you'll have to have installed to build everything.
I'll have to use a fresh default install for that, without the dev tools installed.

But basically:

  * build-essentials
  * python-dev (or python-devel)
  * mysql-dev (or mysql-devel) if you install MySQL-python
  * (same for postgres)
  * for pyside, check online. Their docs say for Ubuntu (use equivalent for Fedora and co., and once it fails google the error and it *should* be obvious or `yum provides xxxx.so.1` can help): `$ sudo apt-get install build-essential git cmake libqt4-dev libphonon-dev python2.7-dev libxml2-dev libxslt1-dev qtmobility-dev`
  * something I might have forgotten

Oh and for Windows, just use the installer, because otherwise it would be a pain in the ass.
I'll build an installer soon :)